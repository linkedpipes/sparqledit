import { IOntologyClass, AtomicClass, UnknownClass } from '../../Ontology/OntologyClass';
import { SerializationContext, BaseTypeSerializer } from '../TypeSerializer';

/**
 * Provide serialization of OntologyClass
 */
export class OntologyClassSerializer extends BaseTypeSerializer<IOntologyClass> {
    serialize(serializeObject: IOntologyClass, serializationContext: SerializationContext) {
        if (serializeObject instanceof AtomicClass) {
            return {
                type: 0,
                iri: serializeObject.iri
            }
        }
        else {
            return {
                type: 1
            }
        }
    }

    deserialize(payload: any, serializationContext: SerializationContext): IOntologyClass {
        switch (payload.type) {
            case 0:
                return new AtomicClass(payload.iri);
            case 1:
                return new UnknownClass("nic");
            default:
                throw Error("Unkown ontology class type.");
        }
    }
}