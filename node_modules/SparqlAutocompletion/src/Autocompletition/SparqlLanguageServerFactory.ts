import { Serializer } from '../Serialization/Serializer';
import { SparqlLanguageServer } from './SparqlLanguageServer';
import { OntologyAssertionsBuilder } from '../Ontology/Algorithms/OntologyAssertionBuilder';
import { OntologyHiearchy } from "../Ontology/OntologyHierchy"
import { TurtleGraphWrapper } from '../GraphTools/TurtleGraphWrapper';

export class SparqlLanguageServerFactory {

    public createFromTurtle(ontologyContent: string): SparqlLanguageServer {
        return this.createFromMultipleTurtle([ontologyContent]);
    }

    public createFromMultipleTurtle(ontologyContents: string[]): SparqlLanguageServer {
        var ontologyAssertionsBuilder = new OntologyAssertionsBuilder();
        var graphs = ontologyContents.map(x => new TurtleGraphWrapper(x));
        var ontologyAssertionsResult = ontologyAssertionsBuilder.buildOntologyAsertionsMultipleGraphs(graphs);
        return new SparqlLanguageServer(ontologyAssertionsResult.ontologyAssertions);
    }

    public createFromSerializedOntologyAssertions(serializedOntologyAssertions: string): SparqlLanguageServer {
        var serializer = new Serializer();
        var ontologyAssertions = serializer.deserializeOntologyAssertions(serializedOntologyAssertions);
        return new SparqlLanguageServer(ontologyAssertions);
    }
}