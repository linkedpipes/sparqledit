import { SparqlAutocompleteItem } from "../SparqlAutocompleteProvider"
import { ERSParser, IParserResult } from "ERSParser";
import { injectCursor, injectUnknown } from "../Utils/QueryTerminalInjection"
export class AutocompleteSubProviderContext {

    private _queryWithCursorParserResult: IParserResult;
    private _queryWithUnknownParserResult: IParserResult;


    constructor(public query: string, public cursorOffset: number) {

    }

    public get queryWithCursorParserResult(): IParserResult {
        if (!this._queryWithCursorParserResult) {
            var query = injectCursor(this.query, this.cursorOffset);
            var parser = new ERSParser();
            this._queryWithCursorParserResult = parser.parse(query);
        }

        return this._queryWithCursorParserResult;
    }

    public get queryWithUnknownParserResult(): IParserResult {
        if (!this._queryWithUnknownParserResult) {
            var query = injectUnknown(this.query, this.cursorOffset);
            var parser = new ERSParser();
            this._queryWithUnknownParserResult = parser.parse(query);
        }

        return this._queryWithUnknownParserResult;
    }
}

export interface AutocompleteSubProvider {
    provideAutocompleteItems(context: AutocompleteSubProviderContext): SparqlAutocompleteItem[];
}