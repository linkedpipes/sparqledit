import { Block } from './Query/Query';
import { injectCursor } from './Utils/QueryTerminalInjection';
import { QueryClassInferencer } from './Inference/QueryClassInferencer';
import { QueryAdviceInferencer } from './Inference/QueryAdviceInferencer';
import { OntologyAssertions } from '../Ontology/OntologyAssertions';
import { TurtleGraphWrapper } from '../GraphTools/TurtleGraphWrapper';
import { OntologyHierarchy } from '../Ontology/OntologyHierarchy';
import { OntologyHierarchyBuilder } from '../Ontology/Algorithms/OntologyHierarchyBuilder';
import { OntologyAssertionsBuilder } from '../Ontology/Algorithms/OntologyAssertionBuilder';
import { SparqlAutocompleteItem, SparqlAutocompleteProvider } from './SparqlAutocompleteProvider';
import { SparqlSignatureHelpProvider } from './SparqlSignatureHelpProvider';
import { SparqlHoverProvider } from 'SparqlAutocompletion/src/Autocompletition/SparqlHoverProvider';
import { Node } from '../Autocompletition/Query/Query'
import { ISparqlLanguageServerSettings, SparqlLanguageServerSettings } from '../Autocompletition/SparqlLanguageServerSettings';
import * as _ from 'lodash';
import { ERSParser } from 'ERSParser';

export class SparqlLanguageServer {
    private defaultLanguageTag = "en";

    public _ontologyHierarchy: OntologyHierarchy;
    public _sparqlAutocompleteProvider: SparqlAutocompleteProvider;
    public _sparqlSignatureHelpProvider: SparqlSignatureHelpProvider;
    public _sparqlHoverProvider: SparqlHoverProvider;

    constructor(private ontologyAssertions: OntologyAssertions, sparqlLanguageServerSettings: ISparqlLanguageServerSettings) {
        var ontologyHiarchyBuilder = new OntologyHierarchyBuilder();
        var coealescedSparqlLanguageServerSettings = new SparqlLanguageServerSettings(sparqlLanguageServerSettings);
        this._ontologyHierarchy = ontologyHiarchyBuilder.createOntologyHierarchy(ontologyAssertions);
        this._sparqlAutocompleteProvider = new SparqlAutocompleteProvider(this._ontologyHierarchy, coealescedSparqlLanguageServerSettings);
        this._sparqlSignatureHelpProvider = new SparqlSignatureHelpProvider(this._ontologyHierarchy, coealescedSparqlLanguageServerSettings);
        this._sparqlHoverProvider = new SparqlHoverProvider(this._ontologyHierarchy, this.defaultLanguageTag);
    }

    public get ontologyHierarchy() {
        return this._ontologyHierarchy;
    }

    public get sparqlSignatureHelpProvider() {
        return this._sparqlSignatureHelpProvider;
    }

    public get sparqlHoverProvider() {
        return this._sparqlHoverProvider;
    }

    provideAutocompleteItems(query: string, cursorOffset: number): SparqlAutocompleteItem[] {
        return this._sparqlAutocompleteProvider.provideAutocompleteItems(query, cursorOffset);
    }
}