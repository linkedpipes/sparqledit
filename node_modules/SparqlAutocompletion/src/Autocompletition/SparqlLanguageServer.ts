import { TurtleGraphWrapper } from '../GraphTools/TurtleGraphWrapper';
import { OntologyHiearchy } from '../Ontology/OntologyHierchy';
import { OntologyHiearchyBuilder } from '../Ontology/Algorithms/OntologyHiearchyBuilder';
import { OntologyAssertionsBuilder } from '../Ontology/Algorithms/OntologyAssertionBuilder';
import { SparqlAutocompleteProvider } from './SparqlAutocompleteProvider';
import { SparqlSignatureHelpProvider } from './SparqlSignatureHelpProvider';

export class SparqlLanguageServer {

    private ontologyAssertionsBuilder = new OntologyAssertionsBuilder();
    private ontologyHiarchyBuilder = new OntologyHiearchyBuilder();
    private _ontologyHiearchy: OntologyHiearchy;

    private _sparqlAutocompleteProvider: SparqlAutocompleteProvider;
    private _sparqlSignatureHelpProvider: SparqlSignatureHelpProvider;

    constructor(private ontologyContents: string[]) {
        console.log('Start preparing ontology hiearchy.')
        this._ontologyHiearchy = this.createOntologyHiearchyFromFile();
        console.log('Ontology hiearchy prepared.')

        this._sparqlAutocompleteProvider = new SparqlAutocompleteProvider(this._ontologyHiearchy);
        this._sparqlSignatureHelpProvider = new SparqlSignatureHelpProvider(this._ontologyHiearchy);
    }

    private createOntologyHiearchyFromFile() {
        var graphs = this.ontologyContents.map(x => new TurtleGraphWrapper(x));
        var ontologyAssertions = this.ontologyAssertionsBuilder.buildOntologyAsertionsMultipleGraphs(graphs);
        var ontologyHiearchy = this.ontologyHiarchyBuilder.createOntologyHiearchy(ontologyAssertions);
        return ontologyHiearchy;
    }

    public get ontologyHiearchy() {
        return this._ontologyHiearchy;
    }

    public get sparqlAutocompleteProvider() {
        return this._sparqlAutocompleteProvider;
    }

    public get sparqlSignatureHelpProvider() {
        return this._sparqlSignatureHelpProvider;
    }

}