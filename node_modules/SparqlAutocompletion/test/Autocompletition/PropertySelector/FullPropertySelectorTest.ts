import { FullPropertySelector } from "../../../src/Autocompletition/PropertySelector/FullPropertySelector";
import { RestrictedPropertySelector } from "../../../src/Autocompletition/PropertySelector/RestrictedPropertySelector";
import { createOntologyAssertionsFromTurtle } from "../../Utils/Utils";
import { nc, no } from './OntologyObjectUtils'

import * as chai from 'chai';

describe("FullPropertySelector", () => {
    it("should sort 1. testcase by topological order.", () => {
        var ontologyAssertions = createOntologyAssertionsFromTurtle(
            require("raw-loader!../../TestData/Autocompletition/PropertySelector/fullPropertySelectorOntology1.ttl")
        );

        var propertySelector = new FullPropertySelector(ontologyAssertions);
        var orderConcepts = propertySelector.getPropertiesFor(nc(0));
        chai.expect(orderConcepts).to.deep.equal([no([0]), no([1]), no([2]), no([3]), no([4]), no([5]), no([6])]);
    });

    it("should sort 2. testcase by topological order.", () => {
        var ontologyAssertions = createOntologyAssertionsFromTurtle(
            require("raw-loader!../../TestData/Autocompletition/PropertySelector/fullPropertySelectorOntology2.ttl")
        );

        var propertySelector = new FullPropertySelector(ontologyAssertions);
        var orderConcepts = propertySelector.getPropertiesFor(nc(0));
        chai.expect(orderConcepts).to.deep.equal([no([0]), no([1]), no([2]), no([3]), no([4]), no([5]), no([6])]);
    });

    it("should sort 3. testcase by topological order.", () => {
        var ontologyAssertions = createOntologyAssertionsFromTurtle(
            require("raw-loader!../../TestData/Autocompletition/PropertySelector/fullPropertySelectorOntology3.ttl")
        );

        var propertySelector = new FullPropertySelector(ontologyAssertions);
        var orderConcepts = propertySelector.getPropertiesFor(nc(0));
        chai.expect(orderConcepts).to.deep.equal([no([0])]);
    });

    it("should not fail on non-existing ontology concept.", () => {
        var ontologyAssertions = createOntologyAssertionsFromTurtle(
            require("raw-loader!../../TestData/Autocompletition/PropertySelector/fullPropertySelectorOntology3.ttl")
        );

        var propertySelector = new FullPropertySelector(ontologyAssertions);
        var orderConcepts = propertySelector.getPropertiesFor(nc(1));
        chai.expect(orderConcepts).to.deep.equal([no([1])]);
    });
});