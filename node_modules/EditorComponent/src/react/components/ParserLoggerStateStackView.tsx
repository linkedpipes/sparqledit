import { EditorSettingsStore } from '../store/EditorSettingsStore';
import * as React from "react";
import { observer } from "mobx-react";
import { JsonFormatter } from "./utils/JsonFormatter";
import { Paper, List, ListItem, Card, CardHeader, CardText } from "material-ui"
export interface ParserLoggerStateStackViewProps {
    stateStack: any[];
}

export class ParserLoggerStateStackView extends React.Component<ParserLoggerStateStackViewProps, any> {
    private orangeColor = "ffe0b2";

    renderRule(stackItem: any, index: number) {
        return (
            <Card key={index}>
                <CardHeader title={stackItem.Id} actAsExpander={true} style={{ backgroundColor: this.orangeColor }} />
                <CardText expandable={true}>
                    <List>
                        <ListItem>Rules:
                            <List>
                                {stackItem.Rules.map((rule: any, index: number) =>
                                    <ListItem key={index}>
                                        {rule}
                                    </ListItem>)
                                }
                            </List>
                        </ListItem>
                        <ListItem>Transitions:
                            <List>
                                {
                                    Object.keys(stackItem.Transitions).map((key: string, index: number) =>
                                        <ListItem key={index}>
                                            {key} - &gt; {stackItem.Transitions[key]}
                                        </ListItem>
                                    )
                                }
                            </List>
                        </ListItem>
                    </List>
                </CardText>
            </Card>
        );
    }

    renderSymbol(stackItem: any, index: number) {
        return <Card key={index}><CardHeader title={stackItem} /></Card>
    }

    render() {
        return (
            <div> State stack:
                {this.props.stateStack.map((stackItem: any, index: number) => index % 2 == 0 ? this.renderRule(stackItem, index) : this.renderSymbol(stackItem, index))}
            </div>
        );
    }
}