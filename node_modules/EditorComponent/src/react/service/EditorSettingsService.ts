import { IEditorSettings, EditorSettingItem, EditorSettingsFactory } from '../model/EditorSettings';

import * as jsCookie from "js-cookie";
class CookiesServise {
    public get(name: string): string {
        return jsCookie.get(name);
    }

    public set(name: string, value: string) {
        jsCookie.set(name, value);
    }
}

export class EditorSettingsService {
    private cookies: any = new CookiesServise();
    configureSetings(): IEditorSettings {
        var editorSettings = EditorSettingsFactory();
        editorSettings.registerItem(new EditorSettingItem('showLexerOutput', 'Show lexer output'))
            .registerItem(new EditorSettingItem('showParserOutput', 'Show parser output'))
            .registerItem(new EditorSettingItem('showParserLog', 'Show parser log'))
            .registerItem(new EditorSettingItem('showParserStates', 'Show parser states'))
            .registerItem(new EditorSettingItem('showStack', 'Show parser stack'))
            .registerItem(new EditorSettingItem('interactiveMode', 'Interactive mode'));
        return editorSettings;
    }

    loadSettingsFromCookies(editorSettings: IEditorSettings): IEditorSettings {
        for (var itemDefinition of editorSettings.itemsDefinitions) {
            var itemName = itemDefinition.name;
            var itemValue = this.cookies.get(itemName) === "true";
            editorSettings = editorSettings.setSettings(itemName, itemValue);
        }
        return editorSettings;
    }

    saveSettingsToCookies(editorSettings: IEditorSettings) {
        for (var itemName in editorSettings.items) {
            this.cookies.set('settings.' + itemName, editorSettings.items.get(itemName).toString());
        }
    }

    createAndLoadSettingsFromCookies() {
        var editorSettings = this.configureSetings();
        editorSettings = this.loadSettingsFromCookies(editorSettings);
        return editorSettings;
    }
}