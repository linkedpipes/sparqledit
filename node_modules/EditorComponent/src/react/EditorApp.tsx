import { EditorSettingsService } from './service/EditorSettingsService';
import { EditorSettingsStore } from './store/EditorSettingsStore';
import { EditorSettingsComponent } from "./components/EditorSettingsComponent"
import { MonacoEditorWrapper } from "./components/MonacoEditorWrapper"
import { ParsingService, iresult, ParserResultStore } from "./service/ParsingService";
import * as React from "react";
import { observer } from "mobx-react";
import DevTools from 'mobx-react-devtools';
import { observable } from "EditorComponent/node_modules/mobx/lib/mobx";
import { ParserLogger } from "EditorComponent/src/react/components/ParserLogger";
import RaisedButton from 'material-ui/RaisedButton';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
var injectTapEventPlugin = require("react-tap-event-plugin");
@observer
export class EditorApp extends React.Component<any, any> {
    private editorSettingsService = new EditorSettingsService();
    private editorSettingsStore: EditorSettingsStore;
    private monacoEditor: monaco.editor.IStandaloneCodeEditor;
    private parserResultStore: ParserResultStore;
    @observable someText = "";

    constructor() {
        super();
        injectTapEventPlugin();
        this.editorSettingsStore = new EditorSettingsStore();
        this.init();
        this.runNewParserClick = this.runNewParserClick.bind(this);
        this.setMonacoEditor = this.setMonacoEditor.bind(this);
    }

    private init() {
        this.editorSettingsStore = this.editorSettingsService.createAndLoadSettingsFromCookies();
        this.parserResultStore = new ParserResultStore();
    }

    runNewParserClick() {
        var parserService = new ParsingService(this.editorSettingsStore);
        var res = parserService.run(this.monacoEditor.getModel().getValue());
        this.parserResultStore.result = res;
    }

    setMonacoEditor(monacoEditor: monaco.editor.IStandaloneCodeEditor) {
        this.monacoEditor = monacoEditor;
    }

    render() {
        return (<MuiThemeProvider>
            <div className="row">
                <div className="col s4">
                    <MonacoEditorWrapper setMonacoEditor={this.setMonacoEditor} />
                    <RaisedButton onClick={this.runNewParserClick}>Run</RaisedButton>
                    <EditorSettingsComponent editorSettingsStore={this.editorSettingsStore} />
                    {/*<ng-include src="'views/parserVisualiserView.html'"></ng-include>*/}
                </div>
                <div className="col s8 ">
                    <ParserLogger parserResultStore={this.parserResultStore} editorSettingsStore={this.editorSettingsStore} />
                    {/*<ng-include src="'views/debugger/parserDebuggerView.html'"></ng-include>*/}
                </div>
                <DevTools />
            </div>
        </MuiThemeProvider>);
    }
}