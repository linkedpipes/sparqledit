import { AutocompleteProviderClass, OntologyAssertionsBuilder, OntologyHiearchyBuilder, TurtleGraphWrapper } from "AutocompleteProvider";
var ERSParser = require('ERSParser');

var ontologyAssertionsBuilder = new OntologyAssertionsBuilder();
var ontologyHiarchyBuilder = new OntologyHiearchyBuilder();

function readFile() {
    var ss = require('raw-loader!./resources/schema.ttl');
    return ss;
}

function parseQueryFromFile(queryContent: string) {
    var parser = new ERSParser();
    return parser.parse(queryContent);
}

function createOntologyHiearchyFromFile() {
    var fileContent = readFile();
    var ontologyAssertions = ontologyAssertionsBuilder.buildOntologyAsertions(new TurtleGraphWrapper(fileContent));
    var ontologyHiearchy = ontologyHiarchyBuilder.createOntologyHiearchy(ontologyAssertions);
    return ontologyHiearchy;
}

export class Pokus {
    writeSome() {
        var ontologyHierachy = createOntologyHiearchyFromFile();
        var autocompleteProvider = new AutocompleteProviderClass(ontologyHierachy);
        var queryContent = require('raw-loader!./resources/query.sparql')
        var query = parseQueryFromFile(queryContent);
        var autocompleteResult = autocompleteProvider.doAutocomplete(query);
        console.log(autocompleteResult)
        var end = '';
    }
}

console.log('sss');
var pokus = new Pokus();
pokus.writeSome();