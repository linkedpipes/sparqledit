import { observable, computed } from "mobx";

export class EditorSettingItem {
    constructor(public name: string, public title: string) {

    }
}

export class EditorSettingsStore {
    @observable itemsDefinitions: EditorSettingItem[] = [];
    @observable items: { name: string, value: boolean }[] = [];

    registerItem(settingsItem: EditorSettingItem) {
        this.itemsDefinitions.push(settingsItem);
        this.setSettings(settingsItem.name, false);
        return this;
    }

    private getSettingsPair(name: string) {
        var matchedSettigns = this.items.filter(x => x.name == name);
        if (matchedSettigns.length < 1) {
            return null;
        }
        return matchedSettigns[0];
    }
    
    public getSettings(name: string): boolean {
        var settings = this.getSettingsPair(name);
        if (settings == null) {
            return null;
        }
        return settings.value;
    }

    setSettings(name: string, value: boolean) {
        var foundedSettings = this.getSettingsPair(name);
        if (foundedSettings == null) {
            this.items.push({ name: name, value: value })
        }
        else {
            foundedSettings.value = value;
        }
    }
};