/// <reference path="../node_modules/monaco-editor/monaco.d.ts" />
import { IPluginManagerFactory } from './factory/plugin/PluginManagerFactory';
import { EditorApp, EditorAppProps } from "./components/EditorApp";

import * as React from "react";
import * as ReactDOM from "react-dom";

export abstract class BaseEditorComponent {
    constructor(public container: HTMLElement,
        private pluginManagerFactory: IPluginManagerFactory) {

        if (!(container instanceof Element)) {
            throw new Error("Sparql editor given container is not instance of Element (DOM).");
        }
    }

    public createEditorAppProps(): EditorAppProps {
        var pluginManager = this.pluginManagerFactory.createPluginManager();

        return {
            pluginManager: pluginManager
        }
    }

    public init() {
        var element = React.createElement(EditorApp, this.createEditorAppProps());
        ReactDOM.render(element, this.container);
    }
}