import { PluginManager } from '../plugins/PluginManager';

export class MonacoEditorFactory {

    createMonacoEditor(
        containerElement: HTMLElement,
        monacoEditorUrl: string,
        setMonacoEditor: (monacoEditor: monaco.editor.IStandaloneCodeEditor) => void,
        defaultEditorValue?: string) {

        var fn = this.initMonacoEditor;
        (window as any).requirejs.config({ paths: { vs: monacoEditorUrl } });
        (window as any).requirejs(['vs/editor/editor.main'], function () {
            monaco.languages.register({ id: 'sparql' });
            var editor = fn.call(this, containerElement, defaultEditorValue);
            setMonacoEditor(editor);
        });
    }

    private initMonacoEditor(containerElement: HTMLElement, defaultEditorValue?: string) {
        var defaultValue = defaultEditorValue || "";

        var editor = monaco.editor.create(containerElement, {
            value: defaultValue,
            language: 'sparql',
            fixedOverflowWidgets: true
        });
        return editor;  
    }   
}