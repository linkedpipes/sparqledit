import { ErrorCheckPlugin } from '../plugins/ErrorCheckPlugin/ErrorCheckPlugin';
import { PluginManager } from '../plugins/PluginManager';
import { AutocompletitionPlugin } from '../plugins/AutocompletitionPlugin/AutocompletitionPlugin';
import { EditorChangePlugin } from "../plugins/EditorChangePlugin/EditorChangePlugin";
import { SyntaxHighlightPlugin } from "../plugins/SyntaxHighlightPlugin/SyntaxHighlightPlugin";
import { CursorInjectionPlugin } from "../plugins/CursorInjectionPlugin/CursorInjectionPlugin";
import { PropertyAutocompleteTool } from "../plugins/Tools/PropertyAutocompleteTool/PropertyAutocompleteTool";
import { ParserLoggerTool } from "../plugins/Tools/ParserLogger/ParserLoggerTool";
import { ParserVisualiserTool } from "../plugins/Tools/ParserVisualiserTool/ParserVisualiserTool";
import { EditorSettingsPlugin } from "../plugins/EditorSettingsPlugin/EditorSettingsPlugin";

export class PluginManagerFactory {
    createPluginManager() {
        var pluginMangager = new PluginManager();

        //inject all plugins
        pluginMangager.registerPlugin(new EditorChangePlugin());
        pluginMangager.registerPlugin(new EditorSettingsPlugin());
        pluginMangager.registerPlugin(new SyntaxHighlightPlugin());
        pluginMangager.registerPlugin(new ErrorCheckPlugin());
        pluginMangager.registerPlugin(new AutocompletitionPlugin());
        pluginMangager.registerPlugin(new CursorInjectionPlugin());
        pluginMangager.registerPlugin(new PropertyAutocompleteTool());
        pluginMangager.registerPlugin(new ParserLoggerTool());
        pluginMangager.registerPlugin(new ParserVisualiserTool());

        return pluginMangager;
    }
}