import { ErrorCheckPlugin } from "../../plugins/ErrorCheckPlugin/ErrorCheckPlugin";
import { PluginManager } from "../../plugins/PluginManager";
import { EditorChangePlugin } from "../../plugins/EditorChangePlugin/EditorChangePlugin";
import { SyntaxHighlightPlugin } from "../../plugins/SyntaxHighlightPlugin/SyntaxHighlightPlugin";
import { PropertyAutocompleteTool } from "../../plugins/Tools/PropertyAutocompleteTool/PropertyAutocompleteTool";
import { SparqlEditorSettings } from "EditorComponent/src/editor/SparqlEditorSettings";

export interface IPluginManagerFactory {
    createPluginManager(): PluginManager;
}

export abstract class BasePluginManagerFactory {

    constructor(private sparqlEditorSettings: SparqlEditorSettings) {
        // empty 
    }

    createPluginManager() {
        var pluginMangager = new PluginManager();

        if (this.sparqlEditorSettings.saveEditorValueInCookies === true) {
            pluginMangager.registerPlugin(new EditorChangePlugin());
        }

        pluginMangager.registerPlugin(new SyntaxHighlightPlugin());
        pluginMangager.registerPlugin(new ErrorCheckPlugin());

        pluginMangager.registerPlugin(new PropertyAutocompleteTool());
        this.registerAdditionalPlugins(pluginMangager);
        return pluginMangager;
    }

    abstract registerAdditionalPlugins(pluginMangager: PluginManager): void;
}