import { EditorSettingsService } from '../service/EditorSettingsService';
import { ErrorMessageService } from '../service/ErrorMessageService';
import { ParserErrorStore } from '../store/ParserErrorsStore';
import { EditorSettingsStore } from '../store/EditorSettingsStore';
import { ToolStore } from "../store/ToolStore";

export interface IEditorPluginApi {
    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor
    getToolStore(): ToolStore;
    getEditorSettings(): EditorSettingsStore;
    getErrorMessageService(): ErrorMessageService;
    getEditorSettingsService(): EditorSettingsService;
}

export class EditorPluginApi implements IEditorPluginApi {

    private errorMessageService: ErrorMessageService;
    private editorSettingsService: EditorSettingsService;

    constructor(
        private monacoEditor: monaco.editor.IStandaloneCodeEditor,
        private editorSettingsStore: EditorSettingsStore,
        private toolStore: ToolStore,
        private parserErrorStore: ParserErrorStore) {

        this.errorMessageService = new ErrorMessageService(parserErrorStore, monacoEditor.getModel());
        this.editorSettingsService = new EditorSettingsService();
    }

    getMonacoEditor() {
        return this.monacoEditor;
    }

    getToolStore() {
        return this.toolStore;
    }

    getEditorSettings() {
        return this.editorSettingsStore;
    }

    getErrorMessageService() {
        return this.errorMessageService;
    }

    getEditorSettingsService() {
        return this.editorSettingsService;
    }
}