import { ErrorMessageProvider } from '../providers/ErrorMessageProvider';
import { ParserErrorStore } from '../store/ParserErrorsStore';
import { EditorSettingsStore } from '../store/EditorSettingsStore';
import { ToolStore } from "EditorComponent/src/store/ToolStore";

export interface IEditorPluginApi {
    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor
    getToolStore(): ToolStore;
    getEditorSettings(): EditorSettingsStore;
    getErrorMessageProvider(): ErrorMessageProvider;
}

export class EditorPluginApi implements IEditorPluginApi {

    private errorMessageProvider: ErrorMessageProvider;

    constructor(
        private monacoEditor: monaco.editor.IStandaloneCodeEditor,
        private editorSettingsStore: EditorSettingsStore,
        private toolStore: ToolStore,
        private parserErrorStore: ParserErrorStore) {

        this.errorMessageProvider = new ErrorMessageProvider(parserErrorStore, monacoEditor.getModel());
    }

    getMonacoEditor() {
        return this.monacoEditor;
    }

    getToolStore() {
        return this.toolStore;
    }

    getEditorSettings() {
        return this.editorSettingsStore;
    }

    getErrorMessageProvider() {
        return this.errorMessageProvider;
    }
}