import { ErrorMessageService } from '../service/ErrorMessageService';
import { ParserErrorStore } from '../store/ParserErrorsStore';
import { EditorSettingsStore } from '../store/EditorSettingsStore';
import { ToolStore } from "../store/ToolStore";
import { SparqlEditorSettings } from 'EditorComponent/src/editor/SparqlEditorSettings';
import { SparqlLanguageServer } from 'SparqlAutocompletion';

export interface IEditorPluginApi {
    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor
    getToolStore(): ToolStore;
    getEditorSettings(): EditorSettingsStore;
    getErrorMessageService(): ErrorMessageService;
    getSparqlLanguageServer(): SparqlLanguageServer;
}

export class EditorPluginApi implements IEditorPluginApi {

    private errorMessageService: ErrorMessageService;

    constructor(
        private monacoEditor: monaco.editor.IStandaloneCodeEditor,
        private sparqlLanguageServer: SparqlLanguageServer,
        private editorSettingsStore: EditorSettingsStore,
        private toolStore: ToolStore,
        private parserErrorStore: ParserErrorStore) {

        this.errorMessageService = new ErrorMessageService(parserErrorStore, monacoEditor.getModel());
    }

    getMonacoEditor() {
        return this.monacoEditor;
    }

    getToolStore() {
        return this.toolStore;
    }

    getEditorSettings() {
        return this.editorSettingsStore;
    }

    getErrorMessageService() {
        return this.errorMessageService;
    }

    getSparqlLanguageServer() {
        return this.sparqlLanguageServer;
    }
}