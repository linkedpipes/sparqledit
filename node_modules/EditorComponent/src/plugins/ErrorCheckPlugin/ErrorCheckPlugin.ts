import { ErrorMessageProvider } from '../../providers/ErrorMessageProvider';
import { IPlugin, IEditorPluginApi } from '../IPlugin';
import { ERSParser } from "ERSParser"

export class ErrorCheckPlugin implements IPlugin {
    private errorMessageProvider: ErrorMessageProvider;
    setErrorMessageProvider(errorMessageProvider: ErrorMessageProvider) {
        this.errorMessageProvider = errorMessageProvider;
    }
    
    init(monacoEditor: monaco.editor.IStandaloneCodeEditor, editorPluginApi: IEditorPluginApi): void {
        var editorModel = monacoEditor.getModel();
        this.errorMessageProvider.init(monacoEditor);
        monacoEditor.getModel().onDidChangeContent((e) => {
            if (editorPluginApi.editorSettingsStore.getSettings('interactiveMode')) {
                var editorContent = editorModel.getValue();
                var parser = new ERSParser();
                var parserResult = parser.parse(editorContent);
                this.errorMessageProvider.setEditorErrors(parserResult.recoverableErrors, parserResult.haltingError);
            }
        });
    }
}