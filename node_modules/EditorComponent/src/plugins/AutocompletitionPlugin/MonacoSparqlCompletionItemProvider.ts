import { SparqlAutocompleteProvider, SparqlLanguageServer } from "SparqlAutocompletion";
import { ERSParser } from 'ERSParser';
import { SparqlLanguageService } from "EditorComponent/src/service/SparqlLanguageService";

export class MonacoSparqlCompletionItemProvider implements monaco.languages.CompletionItemProvider {
    private sparqlLanguageService: SparqlLanguageService;

    constructor(sparqlLanguageServer: SparqlLanguageService) {
        this.sparqlLanguageService = sparqlLanguageServer;
    }

    triggerCharacters: string[] = [];

    provideCompletionItems(model: monaco.editor.IReadOnlyModel, position: monaco.Position): monaco.languages.CompletionItem[] {
        return this.sparqlLanguageService.getLanguageServer()
            .sparqlAutocompleteProvider
            .provideAutocompleteItems(model.getValue(), model.getOffsetAt(position))
            .map(x => ({
                label: x.label,
                insertText: x.insertText,
                kind: <any>x.kind,
                filterText: x.filterText
            }));
    }
}