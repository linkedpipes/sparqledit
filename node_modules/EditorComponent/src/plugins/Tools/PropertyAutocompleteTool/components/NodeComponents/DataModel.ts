import { OntologyHierarchy, IOntologyClass, OntologyConcept, OntologyProperty, CleanOntologyClassTextFormatter } from "SparqlAutocompletion";

export interface AutocompleteClass {
    name: string;
    properties: OntologyProperty[];
}

export interface AutocompleteConcept {
    classes: AutocompleteClass[];
}

export interface ClassNodeInput {
    classes: AutocompleteClass[];
}

export interface ConceptNodeInput {
    concepts: AutocompleteConcept[];
}

export interface PropertyNodeInput {
    ontologyProperties: OntologyProperty[];
}

export function createConceptNodeInput(ontologyHierarchy: OntologyHierarchy, ontologyConcepts: OntologyConcept[]): ConceptNodeInput {
    var ontologyClassTextFormatter = new CleanOntologyClassTextFormatter();
    var ontologyAssertions = ontologyHierarchy.ontologyAssertions;
    
    var autocompleteConcepts = ontologyConcepts.map(ontologyConcept => {
        var autocompleteClasses = ontologyConcept.ontologyClasses.map(ontologyClass => {
            var properties = ontologyAssertions.findPropertiesByDomain(ontologyClass)
            return {
                name: ontologyClass.getText(ontologyClassTextFormatter),
                properties: properties
            }
        })

        return {
            classes: autocompleteClasses
        }
    });


    return {
        concepts: autocompleteConcepts
    };
}