import * as React from "react";
import { observer } from "mobx-react";
import { List, ListItem, Divider, RaisedButton, Paper, Card, CardHeader, CardText } from "material-ui"
import { observable } from "mobx";
import { SparqlLanguageServer, OntologyAutocompleteSubProvider, OntologyConcept, OntologyProperty, OntologyHiearchy } from "SparqlAutocompletion";
import { CleanOntologyClassTextFormatter } from "SparqlAutocompletion";
import { IOntologyClass, } from "SparqlAutocompletion";
import { INodeFactoryContext, BaseNodeFactory } from "./NodeFactory";
import { ExpandableList, ExpandableListItem } from "../ExpandableList";
import { PropertyNodeInput } from "./DataModel";

export interface PropertyNodeProps {
    ontologyProperties: OntologyProperty[];
}

export class PropertyNodeComponent extends React.Component<PropertyNodeProps, any> {
    private ontologyClassTextFormatter = new CleanOntologyClassTextFormatter();
    render() {
        return (
            <ul>
                {this.props.ontologyProperties.map((property, propertyIndex) =>
                    <li key={propertyIndex}>{property.name}</li>)
                }
            </ul>
        );
    }
}

export class PropertyNodeFactory extends BaseNodeFactory<PropertyNodeInput, any> {
    
    dataSelector(data: PropertyNodeInput) {
        throw new Error('Final node factory do not select data!');
    }
    
    getListElement(data: PropertyNodeInput, nodeFactoryContext: INodeFactoryContext): JSX.Element {
        return <PropertyNodeComponent
            ontologyProperties={data.ontologyProperties} />
    }
}