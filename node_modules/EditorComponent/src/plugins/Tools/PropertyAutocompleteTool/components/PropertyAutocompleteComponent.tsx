import { EditorSettingsStore } from '../../../../store/EditorSettingsStore';
import * as React from "react";
import { observer } from "mobx-react";
import { observable } from "mobx";
import { TreeComponent } from "./NodeComponents/TreeComponent";
import { ConceptNodeInput, createConceptNodeInput } from "./NodeComponents/DataModel";
import { PropertyAutocompleteOptions } from "../PropertyAutocompleteOptions";
import { SparqlLanguageServer, OntologyHierarchy, OntologyConcept, OntologyProperty } from 'SparqlAutocompletion';
import { IntelisenseResult } from '../IntelisenseResult';
import { NodeApi } from './NodeComponents/NodeFactory';

export interface PropertyAutocompleteComponentProps {
    nodeApi: NodeApi;
    propertyAutocompleteOptions: PropertyAutocompleteOptions;
    intelisenseResult: IntelisenseResult
}

@observer
export class PropertyAutocompleteComponent extends React.Component<PropertyAutocompleteComponentProps, any> {

    constructor() {
        super();
    }

    renderIntelisenseResult() {
        var conceptNodeInput = this.props.intelisenseResult.conceptNodeInput;
        if (conceptNodeInput == null) {
            return null;
        }

        return <TreeComponent
            nodeApi={this.props.nodeApi}
            conceptNodeInput={conceptNodeInput}
            propertyAutocompleteOptions={this.props.propertyAutocompleteOptions} />
    }

    render() {
        return (
            <div>
                <div className="intelisenseTree">
                    {this.renderIntelisenseResult()}
                </div>
            </div>
        );
    }
}
