import { MonacoEditorFactory } from '../factory/MonacoEditorFactory';
import * as React from "react";
import { observer } from "EditorComponent/node_modules/mobx-react";

export interface MonacoEditorWrapperProps {
    monacoEditorUrl: string;
    defaultEditorValue?: string;
    setMonacoEditor(monacoEditor: monaco.editor.IStandaloneCodeEditor): void
}

@observer
export class MonacoEditorWrapper extends React.Component<MonacoEditorWrapperProps, any> {

    constructor() {
        super();
    }

    componentDidMount() {
        var editorContainer = document.getElementById('queryEditorContainer');
        (new MonacoEditorFactory()).createMonacoEditor(
            editorContainer,
            this.props.monacoEditorUrl,
            this.props.setMonacoEditor,
            this.props.defaultEditorValue);
    }

    render() {
        var style = { height: "calc(100% - 3px)", border: "1px solid grey" };
        return (<div id="queryEditorContainer" style={style}></div>);
    }
}