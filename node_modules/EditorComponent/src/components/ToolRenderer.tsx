import { MonacoEditorProvider } from '../providers/MonacoEditorProvider';
import * as React from "react";
import { observer } from "mobx-react";
import { ToolStore, ToolType } from "../store/ToolStore";

export interface ToolRendererProps {
    toolStore: ToolStore
}

@observer
export class ToolRenderer extends React.Component<ToolRendererProps, any> {
    constructor() {
        super();
        this.renderToolsOfType = this.renderToolsOfType.bind(this);
    }

    renderToolsOfType(toolType: ToolType) {
        return this.props.toolStore.tools
            .filter(tool => tool.type == toolType)
            .map((tool, index) =>
                <div key={index}>
                    {tool.content}
                </div>
            )
    }

    render() {
        return (
            <div className="row">
                <div className="col s6">
                    {this.props.children}
                    {this.renderToolsOfType(ToolType.Bottom)}
                </div>
                <div className="col s6">
                    {this.renderToolsOfType(ToolType.SideBar)}
                </div>
            </div>

        );
    }
}