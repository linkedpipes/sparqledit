import { EditorSettingsStore, EditorSettingItem } from '../store/EditorSettingsStore';

import * as jsCookie from "js-cookie";
class CookiesServise {
    public get(name: string): string {
        return jsCookie.get(name);
    }

    public set(name: string, value: string) {
        jsCookie.set(name, value);
    }
}

export class EditorSettingsService {
    private cookies: any = new CookiesServise();
    configureSetings(): EditorSettingsStore {
        var editorSettings = new EditorSettingsStore();
        editorSettings.registerItem(new EditorSettingItem('showLexerOutput', 'Show lexer output'))
            .registerItem(new EditorSettingItem('showParserOutput', 'Show parser output'))
            .registerItem(new EditorSettingItem('showParserLog', 'Show parser log'))
            .registerItem(new EditorSettingItem('showParserStates', 'Show parser states'))
            .registerItem(new EditorSettingItem('showStack', 'Show parser stack'))
            .registerItem(new EditorSettingItem('interactiveMode', 'Interactive mode'))
            .registerItem(new EditorSettingItem('showIntelisenseDemonstration', 'Intelisense demonstration'));
        return editorSettings;
    }

    loadSettingsFromCookies(editorSettings: EditorSettingsStore): EditorSettingsStore {
        for (var itemDefinition of editorSettings.itemsDefinitions) {
            var itemName = itemDefinition.name;
            var itemValue = this.cookies.get('settings.' + itemName) === "true";
            editorSettings.setSettings(itemName, itemValue);
        }
        return editorSettings;
    }

    saveSettingsToCookies(editorSettings: EditorSettingsStore) {
        for (var item of editorSettings.items) {
            this.cookies.set('settings.' + item.name, item.value.toString());
        }
    }

    createAndLoadSettingsFromCookies() {
        var editorSettings = this.configureSetings();
        editorSettings = this.loadSettingsFromCookies(editorSettings);
        return editorSettings;
    }
}