import { ICommand } from "EditorTool/src/Commander/ICommand";
import * as program from "commander";

export class CommanderWrapperError {
    constructor(public consoleMessage: string) {
        // empty
    }
}

export class CommanderWrapper {

    constructor(private commands: ICommand[]) {
        // empty
    }

    public run(processArguments: any) {
        for (var command of this.commands) {
            program
                .command(command.getCommandDefinition())
                .description(command.getDescription())
                .action(command.getAction());

            program.on('command:*', function () {
                console.log(`Invalid command: ${program.args.join('')}\nSee --help for a list of available commands.`);
                process.exit(1);
            });
        }

        try {
            program.parse(processArguments);

            if (!program.args.length) {
                program.help();
            }
        }
        catch (ex) {
            if (ex instanceof CommanderWrapperError) {
                console.log(ex.consoleMessage);
            }
            else {
                throw ex;
            }
        }
    }
}