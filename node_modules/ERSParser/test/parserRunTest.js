var fs = require('fs');
var chai = require('chai');
var ERSParser = require('../src/ERSParser').ERSParser;

describe("Parser should", function () {
    it('parse simple query.', function () {
        var parser = new ERSParser();
        var testQueryContent = 'select * where { ?a ?b ?c }';
        var parserResult = parser.parse(testQueryContent);
        chai.expect(Object.keys(parserResult.query)).deep.equal(["queryType", "variables", "where", "type", "prefixes"]);
    });

    it('show terminals for simple query.', function () {
        var parser = new ERSParser();
        var testQueryContent = 'select * where { ?a ?b ?c }';
        var terminalsView = parser.showTerminals(testQueryContent);
        chai.expect(terminalsView).equal(" SELECT * WHERE { VAR VAR VAR } EOF");
    });

    it('show terminals for empty query.', function () {
        var parser = new ERSParser();
        var testQueryContent = '';
        var terminalsView = parser.showTerminals(testQueryContent);
    });

    it('should parse simple query with recoverable errors.', function () {
        var parser = new ERSParser();
        var testQueryContent = 'select * where { ?a ?b ?c,wrong. }';
        var parserResult = parser.parse(testQueryContent);
        chai.expect(parserResult.recoverableErrors.length).greaterThan(0);
        chai.expect(Object.keys(parserResult.recoverableErrors[0])).deep.equal(["type", "message", "options", "range"]);
    });

    it('should parse simple query with halting error.', function () {
        var parser = new ERSParser();
        var testQueryContent = 'select * where { ?a ?b ?c. ';
        var parserResult = parser.parse(testQueryContent);
        var end = "";
    });

    it('should parse simple query with cursor.', function () {
        var parser = new ERSParser();
        try {
            var testQueryContent = 'select * where { cursor. ?a cursor .?a ?b cursor}';
            var parserResult = parser.parse(testQueryContent);
            var end = '';
        }
        catch (e) {
            var das = '';
        }

    });
});
